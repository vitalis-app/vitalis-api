// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vitalapi.Context;

#nullable disable

namespace vitalapi.Migrations
{
    [DbContext(typeof(VitalContext))]
    [Migration("20250909042309_ReformatacaoDoBanco")]
    partial class ReformatacaoDoBanco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("UsuarioConquista", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ConquistaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataConclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProgressoConquista")
                        .HasColumnType("int");

                    b.Property<int>("StatusConquista")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioProgressoId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ConquistaId");

                    b.HasIndex("UsuarioProgressoId");

                    b.ToTable("UsuarioConquistas");
                });

            modelBuilder.Entity("vitalapi.Models.Assinatura.Assinatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PlanoId")
                        .HasColumnType("int");

                    b.Property<int>("StatusAtual")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PlanoId");

                    b.ToTable("Assinaturas");
                });

            modelBuilder.Entity("vitalapi.Models.Assinatura.Plano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Funcionalidades")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("PlanoTipo")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Planos");
                });

            modelBuilder.Entity("vitalapi.Models.Conquistas.Conquista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("ObjetivoTipo")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeObjetivo")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeXP")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Conquistas");
                });

            modelBuilder.Entity("vitalapi.Models.Especialista.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EspecialistaId")
                        .HasColumnType("int");

                    b.Property<int>("StatusAtual")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("EspecialistaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("vitalapi.Models.Especialista.Disponibilidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiaDaSemana")
                        .HasColumnType("int");

                    b.Property<int>("EspecialistaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HorarioFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("HorarioInicio")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EspecialistaId");

                    b.ToTable("Disponibilidades");
                });

            modelBuilder.Entity("vitalapi.Models.Especialista.Especialista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AvaliacaoMedia")
                        .HasColumnType("double");

                    b.Property<string>("Biografia")
                        .HasColumnType("longtext");

                    b.Property<string>("CRP")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Especialidades")
                        .HasColumnType("longtext");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("longtext");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.Property<decimal>("ValorConsulta")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Especialistas");
                });

            modelBuilder.Entity("vitalapi.Models.EstacaoVital.Missao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("ObjetivoTipo")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeObjetivo")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeXP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Missoes");
                });

            modelBuilder.Entity("vitalapi.Models.EstacaoVital.Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Plantas");
                });

            modelBuilder.Entity("vitalapi.Models.EstacaoVital.RegistroEmocional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfissaoUsuario")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DiaRegistrado")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HumorRegistrado")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RegistrosEmocionais");
                });

            modelBuilder.Entity("vitalapi.Models.Midia.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Categoria")
                        .HasColumnType("longtext");

                    b.Property<int>("Curtidas")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("DuracaoSegundos")
                        .HasColumnType("int");

                    b.Property<bool>("Premium")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("Visualizacoes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssinaturaAtivaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("longtext");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AssinaturaAtivaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.UsuarioHumor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Humor")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioProgressoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioProgressoId");

                    b.ToTable("UsuarioHumores");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.UsuarioMissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MissaoId")
                        .HasColumnType("int");

                    b.Property<int>("ProgressoConquista")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("isConluida")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("MissaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioMissoes");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.UsuarioPlanta", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPlantio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UltimaRega")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("XP")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "PlantaId");

                    b.HasIndex("PlantaId");

                    b.ToTable("UsuarioPlantas");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.UsuarioProgresso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiasAtivosStreak")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeCheckins")
                        .HasColumnType("int");

                    b.Property<int>("TempoMedioUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaAtividade")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("XPTotal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("UsuarioProgressos");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.UsuarioSessao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ComecoSessao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FimSessao")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioSessoes");
                });

            modelBuilder.Entity("UsuarioConquista", b =>
                {
                    b.HasOne("vitalapi.Models.Conquistas.Conquista", "Conquista")
                        .WithMany("UsuariosConquistas")
                        .HasForeignKey("ConquistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vitalapi.Models.Usuario.UsuarioProgresso", "UsuarioProgresso")
                        .WithMany("UsuariosConquistas")
                        .HasForeignKey("UsuarioProgressoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conquista");

                    b.Navigation("UsuarioProgresso");
                });

            modelBuilder.Entity("vitalapi.Models.Assinatura.Assinatura", b =>
                {
                    b.HasOne("vitalapi.Models.Assinatura.Plano", "Plano")
                        .WithMany("Assinaturas")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("vitalapi.Models.Especialista.Agendamento", b =>
                {
                    b.HasOne("vitalapi.Models.Especialista.Especialista", "Especialista")
                        .WithMany()
                        .HasForeignKey("EspecialistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vitalapi.Models.Usuario.Usuario", "Usuario")
                        .WithMany("Agendamentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialista");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("vitalapi.Models.Especialista.Disponibilidade", b =>
                {
                    b.HasOne("vitalapi.Models.Especialista.Especialista", "Especialista")
                        .WithMany()
                        .HasForeignKey("EspecialistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialista");
                });

            modelBuilder.Entity("vitalapi.Models.Especialista.Especialista", b =>
                {
                    b.OwnsOne("vitalapi.Models.Especialista.EspecialistaConfiguracao", "Configuracoes", b1 =>
                        {
                            b1.Property<int>("EspecialistaId")
                                .HasColumnType("int");

                            b1.Property<string>("DispositivosConectados")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("EspecialistaId");

                            b1.ToTable("Especialistas");

                            b1.WithOwner()
                                .HasForeignKey("EspecialistaId");

                            b1.OwnsOne("vitalapi.Models.Configuracao.NotificacaoConfig", "PreferenciaNotificacoes", b2 =>
                                {
                                    b2.Property<int>("EspecialistaConfiguracaoEspecialistaId")
                                        .HasColumnType("int");

                                    b2.Property<bool>("AlertaDiarioAtivo")
                                        .HasColumnType("tinyint(1)");

                                    b2.Property<int>("Id")
                                        .HasColumnType("int");

                                    b2.Property<bool>("LembreteSessaoAtivo")
                                        .HasColumnType("tinyint(1)");

                                    b2.Property<bool>("NotificacaoVideoAtiva")
                                        .HasColumnType("tinyint(1)");

                                    b2.Property<int>("Preferencia")
                                        .HasColumnType("int");

                                    b2.HasKey("EspecialistaConfiguracaoEspecialistaId");

                                    b2.ToTable("Especialistas");

                                    b2.WithOwner()
                                        .HasForeignKey("EspecialistaConfiguracaoEspecialistaId");
                                });

                            b1.Navigation("PreferenciaNotificacoes")
                                .IsRequired();
                        });

                    b.Navigation("Configuracoes");
                });

            modelBuilder.Entity("vitalapi.Models.EstacaoVital.RegistroEmocional", b =>
                {
                    b.HasOne("vitalapi.Models.Usuario.Usuario", "Usuario")
                        .WithMany("RegistrosEmocionais")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("vitalapi.Models.Midia.Video", b =>
                {
                    b.HasOne("vitalapi.Models.Usuario.Usuario", null)
                        .WithMany("VideosAssistidos")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.Usuario", b =>
                {
                    b.HasOne("vitalapi.Models.Assinatura.Assinatura", "AssinaturaAtiva")
                        .WithMany()
                        .HasForeignKey("AssinaturaAtivaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("vitalapi.Models.Usuario.UsuarioConfiguracao", "Configuracoes", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("DispositivosConectados")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");

                            b1.OwnsOne("vitalapi.Models.Configuracao.NotificacaoConfig", "PreferenciaNotificacoes", b2 =>
                                {
                                    b2.Property<int>("UsuarioConfiguracaoUsuarioId")
                                        .HasColumnType("int");

                                    b2.Property<bool>("AlertaDiarioAtivo")
                                        .HasColumnType("tinyint(1)");

                                    b2.Property<int>("Id")
                                        .HasColumnType("int");

                                    b2.Property<bool>("LembreteSessaoAtivo")
                                        .HasColumnType("tinyint(1)");

                                    b2.Property<bool>("NotificacaoVideoAtiva")
                                        .HasColumnType("tinyint(1)");

                                    b2.Property<int>("Preferencia")
                                        .HasColumnType("int");

                                    b2.HasKey("UsuarioConfiguracaoUsuarioId");

                                    b2.ToTable("Usuarios");

                                    b2.WithOwner()
                                        .HasForeignKey("UsuarioConfiguracaoUsuarioId");
                                });

                            b1.Navigation("PreferenciaNotificacoes")
                                .IsRequired();
                        });

                    b.Navigation("AssinaturaAtiva");

                    b.Navigation("Configuracoes");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.UsuarioHumor", b =>
                {
                    b.HasOne("vitalapi.Models.Usuario.UsuarioProgresso", "UsuarioProgresso")
                        .WithMany("Humores")
                        .HasForeignKey("UsuarioProgressoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioProgresso");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.UsuarioMissao", b =>
                {
                    b.HasOne("vitalapi.Models.EstacaoVital.Missao", "Missao")
                        .WithMany("UsuarioMissoes")
                        .HasForeignKey("MissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vitalapi.Models.Usuario.Usuario", "Usuario")
                        .WithMany("Missoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Missao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.UsuarioPlanta", b =>
                {
                    b.HasOne("vitalapi.Models.EstacaoVital.Planta", "Planta")
                        .WithMany("UsuarioPlantas")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vitalapi.Models.Usuario.Usuario", "Usuario")
                        .WithMany("UsuarioPlantas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.UsuarioProgresso", b =>
                {
                    b.HasOne("vitalapi.Models.Usuario.Usuario", "Usuario")
                        .WithOne("Progresso")
                        .HasForeignKey("vitalapi.Models.Usuario.UsuarioProgresso", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.UsuarioSessao", b =>
                {
                    b.HasOne("vitalapi.Models.Usuario.Usuario", "Usuario")
                        .WithMany("SessoesUsuario")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("vitalapi.Models.Assinatura.Plano", b =>
                {
                    b.Navigation("Assinaturas");
                });

            modelBuilder.Entity("vitalapi.Models.Conquistas.Conquista", b =>
                {
                    b.Navigation("UsuariosConquistas");
                });

            modelBuilder.Entity("vitalapi.Models.EstacaoVital.Missao", b =>
                {
                    b.Navigation("UsuarioMissoes");
                });

            modelBuilder.Entity("vitalapi.Models.EstacaoVital.Planta", b =>
                {
                    b.Navigation("UsuarioPlantas");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.Usuario", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Missoes");

                    b.Navigation("Progresso");

                    b.Navigation("RegistrosEmocionais");

                    b.Navigation("SessoesUsuario");

                    b.Navigation("UsuarioPlantas");

                    b.Navigation("VideosAssistidos");
                });

            modelBuilder.Entity("vitalapi.Models.Usuario.UsuarioProgresso", b =>
                {
                    b.Navigation("Humores");

                    b.Navigation("UsuariosConquistas");
                });
#pragma warning restore 612, 618
        }
    }
}
